service:
  name: serverless-todo-app

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function # define iam role for each particular functions
  - serverless-plugin-tracing
  - serverless-aws-documentation # use for document info of app
  - serverless-reqvalidator-plugin # validate request body
  - serverless-plugin-canary-deployments 

provider:
  name: aws
  runtime: nodejs12.x

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-2'}

  tracing: 
    lambda: true
    apiGateway: true

  # Dynamodb Tables: 
  environment: 
    TODOS_TABLE: Todos-${self:provider.stage}

custom: 
  documentation: 
    api: 
      info: 
        version: v1.0.0
        title: Todos API
        description: Serverless exercise for todos list

functions:

  RS256Auth:
    handler: src/lambda/auth/auth0Authorizer.handler

  # TODO: Configure this function
  GetTodos:
    handler: src/lambda/http/getTodos.handler
    events:
      - http:
          method: get
          path: todos
          cors: true
          authorizer: RS256Auth

  # TODO: Configure this function
  CreateTodo:
    handler: src/lambda/http/createTodo.handler
    events:
      - http:
          method: post
          path: todos
          cors: true
          authorizer: RS256Auth

  # TODO: Configure this function
  UpdateTodo:
    handler: src/lambda/http/updateTodo.handler
    events:
      - http:
          method: patch
          path: todos/{todoId}
          cors: true
          authorizer: RS256Auth

  # TODO: Configure this function
  DeleteTodo:
    handler: src/lambda/http/deleteTodo.handler
    events:
      - http:
          method: delete
          path: todos/{todoId}

  # TODO: Configure this function
  GenerateUploadUrl:
    handler: src/lambda/http/generateUploadUrl.handler
    events:
      - http:
          method: post
          path: todos/{todoId}/attachment
          cors: true
          authorizer: RS256Auth

resources:
  Resources:
    # TODO: Add any necessary AWS resources